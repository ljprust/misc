PROGRAM ODESOLVE

REAL*8 :: H,X
REAL*8, ALLOCATABLE :: Y(:),YSAVE(:,:)
INTEGER :: M,N,STEP,I,J

! READ STEP SIZE

WRITE(*,*) 'ENTER H'
READ(*,*) H

! OPEN INPUT DATA FILE

OPEN(UNIT=1,FILE='odedata.txt')

! READ NUMBER OF STATE VARIABLES

READ(1,*) N

! ALLOCATE NUMBER OF STATE VARIABLES

ALLOCATE(Y(N))

! READ INITIAL CONDITIONS ON Y

DO I=1,N
	READ(1,*) Y(I)
END DO

! READ NUMBER OF STEPS

READ(1,*) M

! ALLOCATE NUMBER OF STEPS

ALLOCATE(YSAVE(M,N))

! SAVE INITIAL CONDITIONS

DO I=1,N
	YSAVE(I,1)=Y(I)
END DO

! SET INITIAL VALUE OF X

X=0.0D0

! CALCULATE STATE VARIABLES

DO STEP=2,M

	! CALL FOURTH-ORDER RANGE-KUTTA METHOD

	CALL RK4(Y,H,N,X)
	
	! SAVE STATE VARIABLES
	
	DO I=1,N
		YSAVE(STEP,I)=Y(I)
	END DO
	
END DO

! OPEN OUTPUT FILE

OPEN(UNIT=2,FILE='odeoutput.txt')

! WRITE VALUES OF STATE VARIABLES AT ALL VALUES OF X

DO I=1,N

	DO J=1,M
		WRITE(2,*) YSAVE(J,I)
	END DO
	
	WRITE(2,*) ''
	
END DO

END PROGRAM

SUBROUTINE RK4(Y,H,N,X)

REAL*8 :: Y(N),X,H,K1(N),K2(N),K3(N),K4(N),XNEW,YNEW(N)
INTEGER :: N,I

! CALCULATE ALL STATE VARIABLES

CALL SLOPE(Y,X,K1,N)

! INCREASE X BY HALF OF A STEP SIZE

XNEW=X+H*0.5D0

! FIND NEW Y USING NEW SLOPES

DO I=1,N
	YNEW(I)=Y(I)+0.5D0*K1(I)*H
END DO

! CALCULATE NEW STATE VARIABLES

CALL SLOPE(YNEW,XNEW,K2,N)

! FIND NEW Y USING NEW SLOPES

DO I=1,N
	YNEW(I)=Y(I)+0.5D0*K2(I)*H
END DO

! CALCULATE NEW STATE VARIABLES

CALL SLOPE(YNEW,XNEW,K3,N)

! X VALUE OF THE NEXT STEP

XNEW=X+H

! FIND NEW Y USING NEW SLOPES

DO I=1,N
	YNEW(I)=Y(I)+K3(I)*H
END DO

! CALCULATE NEW STATE VARIABLES

CALL SLOPE(YNEW,XNEW,K4,N)

! CALCULATE FINAL Y USING ALL SLOPES FROM THE RK4 METHOD

DO I=1,N
	Y(I)=Y(I)+H/6.0D0*(K1(I)+2*(K2(I)+K3(I))+K4(I))
END DO

! SET X TO THE X VALUE OF THE NEXT STEP

X=XNEW

RETURN
END

SUBROUTINE SLOPE(Y,X,F,N)

REAL*8 :: Y(N),F(N),X
INTEGER :: N

! GET EQUATIONS FOR STATE VARIABLES

F(1)=Y(2)
F(2)=Y(3)
F(3)=-1.0D0*Y(1)*Y(1)*Y(1)+Y(2)*Y(2)-2.0D0*Y(3)

RETURN
END